<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="IT3ANCVR" failures="2" tests="20" name="AlertingServices" time="110.588" errors="0" timestamp="20 Jul 2020 14:08:20 GMT">
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <failure type="java.lang.IllegalArgumentException" message="Header value cannot be null">
      <![CDATA[java.lang.IllegalArgumentException: Header value cannot be null
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
	at io.restassured.internal.common.assertion.AssertParameter.notNull(AssertParameter.groovy:26)
	at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallStatic(CallSiteArray.java:55)
	at io.restassured.internal.common.assertion.AssertParameter$notNull.callStatic(Unknown Source)
	at io.restassured.internal.RequestSpecificationImpl.header(RequestSpecificationImpl.groovy:843)
	at ProductInventory.ProductEndPoints.AlertingArabicRequest(ProductEndPoints.java:49)
	at ProductInventory.AlertingTest_AR.StartTestCase(AlertingTest_AR.java:38)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="ProductInventory.AlertingErrorTest" name="RequestWithoutMsisdn" time="23.226"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="RequestWithoutToken" time="7.721"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="RequestWrongURL" time="1.232"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="PostRequest" time="1.094"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="badRequest" time="1.916"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="missningQRequest" time="1.03"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="RequestWithoutContentType" time="5.198"/>
  <testcase classname="ProductInventory.AlertingErrorTest" name="RequestWithDifferentMSISDN" time="5.748"/>
  <testcase classname="ProductInventory.AlertingTest_AR" name="HealthProduct" time="0.0">
    <skipped/>
  </testcase> <!-- HealthProduct -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="HealthProduct2" time="0.0">
    <skipped/>
  </testcase> <!-- HealthProduct2 -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="CookingProduct" time="0.0">
    <skipped/>
  </testcase> <!-- CookingProduct -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="ReligiousProduct" time="0.0">
    <skipped/>
  </testcase> <!-- ReligiousProduct -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="UnsubscribedProduct" time="0.0">
    <skipped/>
  </testcase> <!-- UnsubscribedProduct -->
  <testcase classname="ProductInventory.AlertingTest_AR" name="NoProduct" time="0.0">
    <skipped/>
  </testcase> <!-- NoProduct -->
  <testcase classname="ProductInventory.AlertingTest" name="HealthProduct" time="0.206"/>
  <testcase classname="ProductInventory.AlertingTest" name="HealthProduct2" time="0.01">
    <failure type="java.lang.ClassCastException" message="class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader &amp;apos;bootstrap&amp;apos;)">
      <![CDATA[java.lang.ClassCastException: class java.util.LinkedHashMap cannot be cast to class java.util.List (java.util.LinkedHashMap and java.util.List are in module java.base of loader 'bootstrap')
	at io.restassured.path.json.JsonPath.getList(JsonPath.java:375)
	at ProductInventory.AlertingProducts.<init>(AlertingProducts.java:27)
	at ProductInventory.AlertingTest.HealthProduct2(AlertingTest.java:65)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- HealthProduct2 -->
  <testcase classname="ProductInventory.AlertingTest" name="CookingProduct" time="0.108"/>
  <testcase classname="ProductInventory.AlertingTest" name="ReligiousProduct" time="0.083"/>
  <testcase classname="ProductInventory.AlertingTest" name="UnsubscribedProduct" time="0.002">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at io.restassured.path.json.JsonPath.getList(JsonPath.java:375)
	at ProductInventory.AlertingProducts.<init>(AlertingProducts.java:27)
	at ProductInventory.AlertingTest.UnsubscribedProduct(AlertingTest.java:113)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
	... 30 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- UnsubscribedProduct -->
  <testcase classname="ProductInventory.AlertingTest" name="NoProduct" time="0.038"/>
</testsuite> <!-- AlertingServices -->
