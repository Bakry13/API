<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="IT3ANCVR" failures="1" tests="12" name="Management" time="4.392" errors="0" timestamp="6 Jul 2020 14:52:21 GMT">
  <testcase classname="Management.ManagementTest" name="@BeforeMethod StartTestCase" time="0.0">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at Utilities.Auth.getToken(Auth.java:36)
	at Management.ManagementEndPoints.managementRequest(ManagementEndPoints.java:17)
	at Management.ManagementTest.StartTestCase(ManagementTest.java:41)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
	... 32 more
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="Management.ManagementTest" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="Management.ManagementTest" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="Management.ManagementTest" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="Management.ManagementTest" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="Management.ManagementTest" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="Management.ManagementTest" name="@BeforeMethod StartTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod StartTestCase -->
  <testcase classname="Management.ManagementTest" name="@AfterMethod EndReportTestCase" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod EndReportTestCase -->
  <testcase classname="Management.ManagementErrorTest" name="RequestWithoutMsisdn" time="0.319"/>
  <testcase classname="Management.ManagementErrorTest" name="RequestWithoutToken" time="0.312"/>
  <testcase classname="Management.ManagementErrorTest" name="RequestWrongURL" time="0.34"/>
  <testcase classname="Management.ManagementErrorTest" name="PatchRequest" time="0.363"/>
  <testcase classname="Management.ManagementErrorTest" name="badRequest" time="0.355"/>
  <testcase classname="Management.ManagementErrorTest" name="missningQRequest" time="0.364"/>
  <testcase classname="Management.ManagementErrorTest" name="RequestWithDifferentMSISDN" time="0.383"/>
  <testcase classname="Management.ManagementTest" name="voiceProductHasValue" time="0.001">
    <skipped/>
  </testcase> <!-- voiceProductHasValue -->
  <testcase classname="Management.ManagementTest" name="voiceProductIsZero" time="0.001">
    <skipped/>
  </testcase> <!-- voiceProductIsZero -->
  <testcase classname="Management.ManagementTest" name="postpaidProductHasValue" time="0.001">
    <skipped/>
  </testcase> <!-- postpaidProductHasValue -->
  <testcase classname="Management.ManagementTest" name="postpaidProductIsZero" time="0.001">
    <skipped/>
  </testcase> <!-- postpaidProductIsZero -->
  <testcase classname="Management.ManagementNoDataTest" name="StartTestCase" time="1.067">
    <failure type="io.restassured.path.json.exception.JsonPathException" message="Failed to parse the JSON document">
      <![CDATA[io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)
	at io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)
	at io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)
	at io.restassured.path.json.JsonPath.get(JsonPath.java:202)
	at Utilities.Verification.NotFound(Verification.java:77)
	at Management.ManagementNoDataTest.StartTestCase(ManagementNoDataTest.java:49)
Caused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading '<', no possible valid JSON value or punctuation could be recognized.
	at groovy.json.JsonLexer.nextToken(JsonLexer.java:86)
	at groovy.json.JsonLexer$nextToken.call(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)
	at io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)
	at io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)
	at io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)
	... 29 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- StartTestCase -->
</testsuite> <!-- Management -->
